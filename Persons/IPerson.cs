//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace Family2Person.Persons
{
    
    
    /// <summary>
    /// The public interface for Person
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Person))]
    [XmlDefaultImplementationTypeAttribute(typeof(Person))]
    [ModelRepresentationClassAttribute("platform:/plugin/Persons/model/Persons.ecore#//Person")]
    public interface IPerson : IModelElement
    {
        
        /// <summary>
        /// The name property
        /// </summary>
        [DisplayNameAttribute("name")]
        [CategoryAttribute("Person")]
        [XmlElementNameAttribute("name")]
        [IdAttribute()]
        [XmlAttributeAttribute(true)]
        string Name
        {
            get;
            set;
        }
        
        /// <summary>
        /// The birthday property
        /// </summary>
        [DisplayNameAttribute("birthday")]
        [CategoryAttribute("Person")]
        [XmlElementNameAttribute("birthday")]
        [XmlAttributeAttribute(true)]
        Nullable<DateTime> Birthday
        {
            get;
            set;
        }
        
        /// <summary>
        /// The personsInverse property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("personsInverse")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("persons")]
        IPersonRegister PersonsInverse
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired when the Name property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NameChanged;
        
        /// <summary>
        /// Gets fired before the Name property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NameChanging;
        
        /// <summary>
        /// Gets fired when the Birthday property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BirthdayChanged;
        
        /// <summary>
        /// Gets fired before the Birthday property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BirthdayChanging;
        
        /// <summary>
        /// Gets fired before the PersonsInverse property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PersonsInverseChanging;
        
        /// <summary>
        /// Gets fired when the PersonsInverse property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PersonsInverseChanged;
    }
}

